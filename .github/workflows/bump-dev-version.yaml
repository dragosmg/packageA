on:
  push:
    branches:
      - main

name: Bump dev version â¬†

permissions: read-all

concurrency:
  group: bump-dev-version-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  bump-dev-version:
    if: |
      !(contains(github.event.commits[0].message, '[skip version bump]') ||
        contains(github.event.head_commit.message, '[skip version bump]')
      )
    runs-on: ubuntu-latest
    permissions:
      contents: write
      # needed for the Github Action workflow to open a PR
      pull-requests: write
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.1

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install {desc} and {stringr}
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: desc, stringr

      - name: Record the current package version
        # record the current package version in an environment variable
        run: |
          DESC_VERSION=$(R --slave -e 'cat(paste(desc::desc_get_version()))' | tr -d '\n' | xargs)
          echo "CURRENT_PKG_VERSION=${DESC_VERSION}" >> $GITHUB_ENV

      - name: Bump dev version in DESCRIPTION
        # only bump the version if it has 4 components (i.e. is dev)
        run: |
          ver <- desc::desc_get_version()
          cat(paste("\nDESCRIPTION version:", ver, "\n"))
          ver_length <- ver |> as.character() |> stringr::str_split("\\.") |> unlist() |> length()
          if (ver_length == 4) desc::desc_bump_version("dev", normalize = TRUE)
          ver <- desc::desc_get_version()
          cat(paste("\nUpdated DESCRIPTION version:", ver, "\n"))
        shell: Rscript {0}

      - name: Record the new package version
        # record the updated package version
        run: |
          DESC_VERSION=$(R --slave -e 'cat(paste(desc::desc_get_version()))' | tr -d '\n' | xargs)
          echo "NEW_PKG_VERSION=${DESC_VERSION}" >> $GITHUB_ENV

      - name: Update `Date` field
        # bump the date if present
        run: if (desc::desc_has_fields("Date")) desc::desc_set("Date", Sys.Date())
        shell: Rscript {0}

      - name: Debug environment variables
        # print the env vars holding the versions (for debugging)
        run: |
          echo "CURRENT_PKG_VERSION=${{ env.CURRENT_PKG_VERSION }}"
          echo "NEW_PKG_VERSION=${{ env.NEW_PKG_VERSION }}"

      - name: Commit and push changes
        # use the environment variables to write the commit message
        # once merged `[skip version bump]` prevents this workflow from being
        # re-triggered
        run: |
          git config --local user.name "Github Actions"
          git config --local user.email "$github-actions@users.noreply.github.com"
          git checkout -b version-bump-${{ env.NEW_PKG_VERSION }}
          git commit ./DESCRIPTION -m "[skip version bump] dev version to ${{ env.NEW_PKG_VERSION }}" || echo "No changes to commit"
          git push --set-upstream origin version-bump-${{ env.NEW_PKG_VERSION }}

      - name: Create pull request
        # this uses the Github CLI to create a pull request
        # https://cli.github.com/manual/gh_pr_create
        run: gh pr create -B main -H version-bump-${{ env.NEW_PKG_VERSION }} --title "Bump dev version to ${{ env.NEW_PKG_VERSION }}" --body "Created by Github Action"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge pull request
        run: gh pr merge version-bump-${{ env.NEW_PKG_VERSION }} -A "github-actions@users.noreply.github.com" -s -t "[skip version bump] dev version to ${{ env.NEW_PKG_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
